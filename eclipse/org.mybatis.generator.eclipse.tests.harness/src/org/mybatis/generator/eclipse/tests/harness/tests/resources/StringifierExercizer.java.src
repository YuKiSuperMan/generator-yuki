/**
 *    Copyright 2006-2016 the original author or authors.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package mbg.torture.test;

import static org.junit.Assert.*;
import static org.hamcrest.core.IsNot.not;

import java.io.Closeable;
import java.io.IOException;
import java.util.*;
import java.math.BigDecimal;

public class StringifierExercizer {
    private int primitive1 = 3;
    private java.math.BigDecimal[] decimalArray1;
    private java.math.BigInteger integerArray2[][];
    
    public void emptyMethod() {
    }
    
    public <I extends List<String> & Closeable> void intersectionType(I parm) throws IOException {
    }
    
    public int getPrimitive1() {
        return primitive1;
    }
    
    public void setPrimitive1(int primiive1) {
        this.primitive1 = primiive1;
    }
    
    public void someMethod(List<Map<Integer, java.lang.String>> fred, Map<Integer, List<String>> betty) {
    }
    
    public void anotherMethod(String[] args, String args2[][]) {
    }
    
    public static void main(String[] args) throws IOException {
    }

    public void method22(List<? extends BigDecimal> arg) {
    }

    public void method22(Map<Integer, ? super java.math.BigDecimal> arg) {
    }

    public void method33(java.lang.String arg) {
    }
}
